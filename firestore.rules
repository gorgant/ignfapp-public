rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    match /publicUsers/{userId} {
        // Users can read their profile if it belongs to them
        allow read: if isOwner(userId);

        match /personalSessionFragments/{fragmentId} {
            // User can read and write personalSessionFragments if they are the owner
            allow read, write: if isOwner(userId);
        }

        match /privateTrainingPlans/{recordId} {
            // User can read and write privateTrainingPlans if they are the owner
            allow read, write: if isOwner(userId);

            match /planSessionFragments/{fragmentId} {
                // User can read and write planSessionFragments if they are the owner
                allow read, write: if isOwner(userId);
            }
        }

      match /privateTrainingSessions/{recordId} {
          // User can read and write privateTrainingSessions if they are the owner
          allow read, write: if isOwner(userId);
      }

      match /trainingRecords/{recordId} {
          // User can read and write trainingRecords if they are the owner
          allow read, write: if isOwner(userId);
      }

      
    }

    match /publicTrainingPlans/{planId} {
        // User can read a publicTrainingPlans if authenticated
        allow read: if isAuth();
        // User can write publicTrainingPlans if is admin
        allow write: if isAdmin();

        match /planSessionFragments/{fragmentId} {
            // User can read a planSessionFragment if authenticated
            allow read: if isAuth();
            // User can write publicTrainingPlans if is admin
            allow write: if isAdmin();
        }
    }

    match /publicTrainingSessions/{sessionId} {
        // User can read a publicTrainingSessions if authenticated
        allow read: if isAuth();
        // User can write publicTrainingSessions if is admin
        allow write: if isAdmin();
    }

    

    /// FUNCTIONS ///

    // Determine if user is admin
    function isAdmin() {
    	return isAuth() && getUserData().isAdmin == true;
    }

    function isAuth() {
      return request.auth != null;
    }
    
    // Confirm ID of requester matches ID in database
    function isOwner(userId) {
    	return isAuth() && request.auth.uid == userId;
    }

    // // Determine if user is personalSessionFragment owner
    // function isPersonalSessionFragmentOwner() {
    //   return isAuth() && request.auth.uid == resource.data.creatorId;
    // }

    // // Determine if user is planSessionFragment owner
    // function isPlanSessionFragmentOwner() {
    //   return isAuth() && request.auth.uid == resource.data.trainingPlanOwnerId;
    // }

    // // Determine if user is trainingPlan owner
    // function isTrainingPlanOwner() {
    //   return isAuth() && request.auth.uid == resource.data.creatorId;
    // }

    // // Determine if user is trainingRecord owner
    // function isTrainingRecordOwner() {
    //   return isAuth() && request.auth.uid == resource.data.creatorId;
    // }


    // // Determine if user is trainingSession owner
    // function isTrainingSessionOwner() {
    //   return isAuth() && request.auth.uid == resource.data.creatorId;
    // }

    // Retrieve user data, note: you need to explicitly escape variables using the $(variable) syntax
    function getUserData() {
    	return get(/databases/$(database)/documents/publicUsers/$(request.auth.uid)).data;
    }

  }
}