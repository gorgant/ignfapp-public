rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    match /publicUsers/{userId} {
      // Users can only see their profile if it belongs to them
      allow read: if isOwner(userId) || isAdmin();
    }

    match /trainingSessions/{sessionId} {
      // User can read a trainingSession if authenticated
      allow read: if isAuth();
      // User can create a trainingSession if authenticated
      allow create: if isAuth();
      // User can update a trainingSession if is owner or admin
      allow update: if isTrainingSessionOwner() || isAdmin();
      // Only admin can delete a trainingSession
      allow delete: if isAdmin();
    }

    match /trainingPlans/{planId} {
      // User can read a trainingPlan if authenticated
      allow read: if isAuth();
      // User can create a trainingPlan if is owner or admin
      allow create: if isTrainingPlanOwner() || isAdmin();
      // User can update a trainingPlan if is owner or admin
      allow update: if isTrainingPlanOwner() || isAdmin();
      // Only admin can delete a trainingPlan
      allow delete: if isAdmin();

        match /planSessionFragments/{fragmentId} {
          // User can read a planSessionFragment if authenticated
          allow read: if isAuth();
          // User can create a planSessionFragment if is owner or admin
          allow create: if isPlanSessionFragmentOwner() || isAdmin();
          // User can update a planSessionFragment if is owner or admin
          allow update: if isPlanSessionFragmentOwner() || isAdmin();
          // Only admin can delete a planSessionFragment
          allow delete: if isAdmin();
        }
    }

    

    match /publicUsers/{userId}/trainingRecords/{recordId} {
      // User can read and write trainingRecords if they are the owner
      allow read, write: if isRecordOwner(userId) || isAdmin();
    }

    /// FUNCTIONS ///

    function isAuth() {
      return request.auth != null;
    }
    
    // Confirm ID of requester matches ID in database
    function isOwner(userId) {
    	return isAuth() && request.auth.uid == userId;
    }

    // Retrieve user data, note: you need to explicitly escape variables using the $(variable) syntax
    function getUserData() {
    	return get(/databases/$(database)/documents/publicUsers/$(request.auth.uid)).data;
    }

    // Determine if user is admin
    function isAdmin() {
    	return isAuth() && getUserData().isAdmin == true;
    }

    // Determine if user is session owner
    function isTrainingSessionOwner() {
      return isAuth() && request.resource.data.creatorId == request.auth.uid;
    }

    // Determine if user is session owner
    function isPlanSessionFragmentOwner() {
      return isAuth() && request.resource.data.planOwnerId == request.auth.uid;
    }

    // Determine if user is session owner
    function isTrainingPlanOwner() {
      return isAuth() && request.resource.data.creatorId == request.auth.uid;
    }

    // Determine if user is record owner
    function isRecordOwner(userId) {
      return isAuth() && request.resource.data.userId == userId;
    }
  }
}